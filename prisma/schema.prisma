// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


model Todo {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)
}

model Project {
    // base entity schema
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // ------------------------------------------------------------------------------------------------------------
    name 	  String

	contacts  Contact[]
	templates Template[]
	messages  Message[]
}

model Contact {
	// base entity schema
	id        String   @id @default(uuid())
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	// ------------------------------------------------------------------------------------------------------------
	email     String

	projectId String
	project   Project @relation(fields: [projectId], references: [id])

	messages  Message[]
}

model Template {
	// base entity schema
	id        String   @id @default(uuid())
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	// ------------------------------------------------------------------------------------------------------------
	key	   	String
	name      String
	content   String

	projectId String
	project   Project @relation(fields: [projectId], references: [id])

	messages  Message[]

	@@unique([key, projectId])
}

model Message {
	// base entity schema
	id        String   @id @default(uuid())
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	// ------------------------------------------------------------------------------------------------------------
	subject   String
	content   String

	templateId String
	template   Template @relation(fields: [templateId], references: [id])

	projectId String
	project   Project @relation(fields: [projectId], references: [id])

	contactId String
	contact   Contact @relation(fields: [contactId], references: [id])
}